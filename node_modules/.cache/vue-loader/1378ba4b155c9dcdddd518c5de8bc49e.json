{"remainingRequest":"/home/wesley/Documentos/maxdoctor/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wesley/Documentos/maxdoctor/src/components/Form.vue?vue&type=style&index=0&id=1b5a9218&scoped=true&lang=css&","dependencies":[{"path":"/home/wesley/Documentos/maxdoctor/src/components/Form.vue","mtime":1619034230676},{"path":"/home/wesley/Documentos/maxdoctor/node_modules/css-loader/dist/cjs.js","mtime":1608052362950},{"path":"/home/wesley/Documentos/maxdoctor/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1618333842412},{"path":"/home/wesley/Documentos/maxdoctor/node_modules/postcss-loader/src/index.js","mtime":1611366627683},{"path":"/home/wesley/Documentos/maxdoctor/node_modules/cache-loader/dist/cjs.js","mtime":1619017975562},{"path":"/home/wesley/Documentos/maxdoctor/node_modules/vue-loader/lib/index.js","mtime":1618333842412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKRm9ybXsKICAgIHdpZHRoOiAxMDAlOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfTsKI2J1dHRvbi1jb2xvcnsKICAgIGJhY2tncm91bmQtY29sb3I6ICM5YzgzYmUgIWltcG9ydGFudDsKfTsKI3RleHQtZXhjbHVzaXZ7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBwYWRkaW5nLXRvcDogMjBweDsKCn0KCg=="},{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Form.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"d-flex justify-content-center\">\n    <form  class=\"w-25\">\n\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"w-100\">\n       <b-form-group\n       class=\"col\"\n      id=\"fieldset-1\"\n      description=\"Let us know your crm.\"\n      label=\"CRM\"\n      label-for=\"input-1\"\n      valid-feedback=\"Thank you!\"\n    >\n      <b-form-input \n       placeholder=\"000000\" \n       id=\"input-1\" \n       v-model=\"$v.form.crm.$model\"\n              :state=\"\n                $v.form.crm.$dirty\n                  ? !$v.form.crm.$error\n                  : null\n              \"\n       trim></b-form-input>\n    </b-form-group>\n    </div>\n    <div class=\"w-100\">\n     <b-form-group label=\"UF:\" class=\"col\" label-for=\"id_machinePartner\">\n              <b-form-select\n                :options=\"UF\"\n                required\n                v-model=\"form.UF_SELECTED\"\n                   valid-feedback=\"Thank you!\"\n                :invalid-feedback=\"invalidFeedback\"\n                :state=\"state\"\n              >\n                <template v-slot:sigla>\n                  <option :value=\"null\" disabled\n                    >-- Selecione uma opção --</option\n                  >\n                </template>\n              </b-form-select>\n            </b-form-group>\n    </div>\n   </div>\n   <div style=\"flex-direction:column; padding-top: 20px\">\n    <b-button style=\"background-color:#9c83be; border: none; width:400px\" variant=\"success\" @click=\"submit\">\n            Salvar\n    </b-button>\n  \n    <h6 style=\"padding-top:20px\">\n        CANAL DE COMPRA EXCLUSIVO\n    </h6>\n     <h6>\n        PARA CLASSE MÉDICA\n    </h6>\n    </div>\n  </form>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default({\n    name:'Form',\n     computed: {\n      state() {\n        return this.form.crm.length >= 5\n      },\n      invalidFeedback() {\n        if (this.form.crm.length > 0) {\n          return 'Enter at least 5 characters.'\n        }\n        return 'Please enter something.'\n      }\n    },\n    data() {\n      return {\n          UF: [],\n    form: {\n        crm: '',\n        UF_SELECTED:'',\n      }\n      }\n    },\nmounted () {\n    axios\n      .get('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\n      .then(response => response.data.forEach(element => {\n         element.value = element.sigla,\n          element.text = element.sigla\n       this.UF = response.data\n      }))\n  },\nmethods:{\n     touch() {\n      this.$v.form.$touch()\n    },\n      validateForm() {\n      this.$v.form.$touch()\n      if (this.$v.form.$error || this.$v.form.$pending) {\n        this.$toast.error({\n          title: 'Existem campo(s) obrigatório(s) sem preenchimento',\n          message: 'Favor preencher'\n        })\n        return false\n      }\n      return true\n    },\n     submit() {\n        const is_valid = this.validateForm()\n        if (is_valid) {\n            console.log('click', this.form);\n        }\n    \n    },\n}\n})\n\n</script>\n<style scoped>\nForm{\n    width: 100%;\n    align-items: center;\n};\n#button-color{\n    background-color: #9c83be !important;\n};\n#text-exclusiv{\n    text-align: center;\n    padding-top: 20px;\n\n}\n\n</style>"]}]}